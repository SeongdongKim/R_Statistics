grep('ap', char2, value = T)
char2 <- c('grape1', 'apple1', 'apple', 'orange', 'Apple')
grep('ap', char2, value = T)
grep('[1-9]', char2, value = T)
grep('\\d', char2, value = T)
grep('[[:upper:]]', char2, value = T)
grep('[A-Z]', char2, value = T)
char
nchar(char)
nchar(char)
nchar('James Seo')
nchar('서진수')
paste('Seo',"Jin",'Su')
paste('Seo',"Jin",'Su', sep = '')
paste('Seo',"Jin",'Su', sep = ',')
paste('I','\'m','Hungry')
substr('abc123', 3, 3)
substr('abc123', 3, 4)
strsplit('2014/11/22', split = '/')
grep('-', '010-8706-4712')
regexpr('-', '010-8706-4712')
library(rJava)
setwd('D:/Workspace/R_Data_Analysis/Part2/Stage1_WordCloud/Ex01_Seoul_Resporise')
setwd('D:/Workspace/R_Data_Analysis/Part2/data')
library(rJava)
library(KoNLP)
library(wordcloud)
useSejongDic()
data1 <- readLines("seoul_new.txt")
data1 <- readLines("응답소_2015_01.txt")
data1
extractNoun('북서울꿈의숲에 애견놀이터를 만들어주시면 정말 감사하겠습니다,')
data2 <- sapply(data1,extractNoun, USE.NAMES = F)
data2
head(unlist(data2), 30)
data3 <- unlist(data2)
data3
data3 <- gsub("\\d+","", data3)
data3 <- gsub("철거","", data3)
data3 <- gsub("광장","", data3)
data3 <- gsub("세월","", data3)
data3 <- gsub("천막+","", data3)
data3 <- gsub("선체","", data3)
data3 <- gsub("인양","", data3)
data3 <- gsub("훼손","", data3)
data3 <- gsub("진실","", data3)
data3 <- gsub(" ","", data3)
data3 <- gsub("-","", data3)
data3
write(unlist(data3), "응답소_2.txt")
data4 <- read.table("응답소_2.txt")
library(stringr)
data4 <- read.table("응답소_2.txt")
head(data4)
nrow(data4)
wordcount <- table(data4)
wordcount
head(sort(wordcount, decreasing = T), 20)
data3 <- gsub("것","", data3)
data3 <- gsub("한","", data3)
data3 <- gsub("상담내용","", data3)
data3 <- gsub("수","", data3)
data3 <- gsub("들","", data3)
data3 <- gsub("님","", data3)
data3 <- gsub("년","", data3)
data3 <- gsub("일","", data3)
data3 <- gsub("제목","", data3)
data3 <- gsub("Q","", data3)
data3 <- gsub("저","", data3)
data3 <- gsub("적","", data3)
txt <- readLines("gsubfile.txt")
txt
write(unlist(data3),"seoul_3.txt")
write(unlist(data3),"응답소_3.txt")
data4 <- read.table("응답소_3.txt")
wordcount <- table(data4)
head(sort(wordcount, decreasing = T), 20)
library(RColorBrewer)
palete <- brewer.pal(9,"Set3")
wordcloud(names(wordcount), freq = wordcount, scale = c(5,1),rot.per = 0.25, min.freq = 1,
random.order = F, random.color = T, colors=palete)
legend(0.3,1,"서울시 응답소 요청사항 분석", cex=0.8, fill=NA, border=NA, bg="white",
text.col= "red", text.font=2, box.col="red")
install.packages("ggiraphExtra")
library(ggiraphExtra)
library(ggplot2)
library(dplyr)
library(reshape2)
library(extrafont)
install.packages("extrafont")
library(extrafont)
windowsFonts(malgun = "맑은 고딕")
theme_update(text = element_text(family = "malgun"))
str(USArrests)
head(USArrests)
tail(USArrests)
summary(USArrests)
library(tibble)
crime <- rownames_to_column(USArrests, var = "state")
head(crime)
crime$state <- tolower(crime$state)
head(crime)
install.packages('maps')
# 미국 주 지도 데이터 준비하기
states_map <- map_data("state")
str(state_map)
str(states_map)
install.packages("mapproj")
library(mapproj)
ggChoropleth(data = crime,
aes(fill = Murder,
map_id = state),
map = state_map)
# 단계 구분도 만들기
ggChoropleth(data = crime,
aes(fill = Murder,
map_id = state),
map = state_map)
# 단계 구분도 만들기
ggChoropleth(data = crime,
aes(fill = Murder,
map_id = state),
map = states_map)
#인터랙티브 단계 구분도 만들기
ggChoropleth(data = crime,         # 지도에 표현할 데이터
aes(fill = Murder,    # 색깔로 표현할 변수
map_id = state),  # 지역 기준 변수
map = states_map,     # 지도 데이터
interactive = T)       #인터랙티브
m <- ggChoropleth(data = crime,
aes(fill = Murder, map_id = state),
map = states_map) +
ggtitle("미국 주별 살인범죄 분포", "(단위: 인구 10만명당 건수)"
xlab("경도") +
ylab("위도") +
theme(plot.title = element_text(face = "bold", hjust = 0.5),
size = 15, color = "darkblue"))
r <- ggChoropleth(data = crime,
aes(fill = Murder, map_id = state),
map = states_map) +
ggtitle("미국 주별 강간범죄 분포", "(단위: 인구 10만명당 건수)"
xlab("경도") +
ylab("위도") +
theme(plot.title = element_text(face = "bold", hjust = 0.5),
size = 15, color = "darkblue"))
a <- ggChoropleth(data = crime,
aes(fill = Murder, map_id = state),
map = states_map) +
ggtitle("미국 주별 강도범죄 분포", "(단위: 인구 10만명당 건수)"
xlab("경도") +
ylab("위도") +
theme(plot.title = element_text(face = "bold", hjust = 0.5),
size = 15, color = "darkblue"))
u <- ggChoropleth(data = crime,
aes(fill = Murder, map_id = state),
map = states_map) +
ggtitle("미국 주별 도시비율 분포", "(단위: 인구 10만명당 건수)"
xlab("경도") +
ylab("위도") +
theme(plot.title = element_text(face = "bold", hjust = 0.5),
size = 15, color = "darkblue"))
window()
grid.arrange(m, r, a, u, ucol = 2)
grid.arrange(m, r, a, u, ucol = 2)
grid.arrange(m, r, a, u, ucol = 2,
top = '미국 주별 강력범죄 분포')
# 대한민국 시도별 인구 단계 구분도 만들기
install.packages("stringi")
install.packages("stringi")
install.packages("devtools")
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
# 대한민국 시도별 인구 데이터 준비하기
str(changeCode(korpop1))
library(dplyr)
korpop1 <- rename(korpop1,
pop = 총인구_명,
name = 행정구역별_읍면동)
str(changeCode(kormap1))
head(changeCode(kormap1))
# 단계 구분도 만들기
library(ggplot2)
ggChoropleth(data = korpop1,       # 지도에 표현할 데이터
aes(fill = pop,       # 색깔로 표현할 변수
map_id = code,    # 지역 기준 변수
tooltip = name),  # 지도 위에 표시할 지역명
map = kormap1,        # 지도 데이터
interactive = T)      #인터랙티브
library(ggiraphExtra)
ggChoropleth(data = korpop1,       # 지도에 표현할 데이터
aes(fill = pop,       # 색깔로 표현할 변수
map_id = code,    # 지역 기준 변수
tooltip = name),  # 지도 위에 표시할 지역명
map = kormap1,        # 지도 데이터
interactive = T)      #인터랙티브
# 대한민국 시도별 결핵 환자 수 단계 구분도 만들기
str(changeCode(tbc))
str(changeCode(tbc))
ggChoropleth(data = tbc,       # 지도에 표현할 데이터
aes(fill = NewPts,       # 색깔로 표현할 변수
map_id = code,    # 지역 기준 변수
tooltip = name),  # 지도 위에 표시할 지역명
map = kormap1,        # 지도 데이터
interactive = T)      # 인터랙티브
# hiphop 관련 분석 원형 그래프
setwd('D:/Workspace/R_Data_Analysis/Part2/Stage2_Graph/Ex01-1_hiphop')
library(KoNLP)
library(wordcloud)
useSejongDic( )
library(stringr)
library(ggplot2)
library(dplyr)
library(plotrix)
txt <- readLines('D:/Workspace/R_Data_Analysis/Part2/Stage2_Graph/Ex01-1_hiphop/hiphop.txt')
txt
place <- sapply(txt, extractNoun, USE.NAMES = F)
place
head(unlist(place), 30)
cdata <- unlist(place)
place <- str_replace_all(cdata,"[^[:alpha:]]", "")
place
place <- Filter(function(x) {nchar(x) >= 2}, place)
write(unlist(place), "hiphop_2.txt")
rev <- read.table("hiphop_2.txt")
nrow(rev)
wordcount <- table(rev)
head(sort(wordcount, decreasing = T), 30)
# ggplot 사용하여  Top 10 단어에 대해서 원 그래프 만들기
top10 <- head(sort(wordcount, decreasing = T), 10)
top10
pie(top10, main = "hiphop관련 단어 TOP 10")
pie(top10, col=rainbow(10), radius=1, main = "hiphop관련 단어 TOP10")
palete <- brewer.pal(10, "RdGy")
pie(top10, col=rainbow(10), radius=1, main = "hiphop관련 단어 TOP10")
pct <- round(top10/sum(top10) * 100, 1)
pct
names(top10)
lab <- paste(names(top10), "\n", pct, "%")
lab <- paste(names(top10), "\n", pct, "%", sep='')
lab
pie(top10, main = "hiphop관련 단어 TOP 10",
col=rainbow(10), cex=0.8, labels = lab)
str(top10)
df_top10 <- as.data.frame(top10)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat= 'identity')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat= 'identity') +
coord_polar("y", start = 0)
options(digits = 2)
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) *100) %>%
#mutate(ylabel = paste(pct, '%', sep= ''))
#mutate(ylabel = paste(sprintf("%4.1f", pct), '%', sep='')) %>%
mutate(ylabel = paste(sprintf("%4.1f", rev, pct), '%', sep=''))
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct) - 0.5*pct)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat= 'identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
bchart <- head(sort(wordcount, decreasing = T), 10)
bchart
bp <- barplot(bchart, main = "hiphop관련 단어 TOP 10", col = rainbow(10),
cex.names = 0.7, las = 2, ylim=c(0,25))
pct <- round(bchart/sum(bchart) * 100, 1)
pct
text(x = bp, y = bchart*1.05, labels = paste("(",pct,"%",")"), col = "black", cex = 0.7)
pct <- round(top10/sum(top10) * 100, 1)
pct
names(top10)
lab <- paste(names(top10), "\n", pct, "%")
lab <- paste(names(top10), "\n", pct, "%", sep='')
lab
pie(top10, main = "hiphop관련 단어 TOP 10",
col=rainbow(10), cex=0.8, labels = lab)
bchart <- head(sort(wordcount, decreasing = T), 10)
bchart
bp <- barplot(bchart, main = "hiphop관련 단어 TOP 10", col = rainbow(10),
cex.names = 0.7, las = 2, ylim=c(0,25))
pct <- round(bchart/sum(bchart) * 100, 1)
pct
text(x = bp, y = bchart*1.05, labels = paste("(",pct,"%",")"), col = "black", cex = 0.7)
setwd('D:/Workspace/R_Data_Analysis/Part2/Stage2_Graph/Ex01-1_hiphop')
setwd('D:/Workspace/R_Data_Analysis/Part2/Stage2_Graph/Ex01-1_hiphop')
library(KoNLP)
library(wordcloud)
useSejongDic( )
library(stringr)
library(ggplot2)
library(dplyr)
library(plotrix)
mergeUserDic(data.frame(readLines("hiphop.txt"), "ncn"))
txt <- readLines("hiphop.txt")
txt <- readLines('D:/Workspace/R_Data_Analysis/Part2/Stage2_Graph/Ex01-1_hiphop')
txt <- readLines('D:/Workspace/R_Data_Analysis/Part2/Stage2_Graph/Ex01-1_hiphop/hiphop.txt')
setwd('D:/Workspace/R_Data_Analysis/Part2/Stage2_Graph/Ex01-1_hiphop')
library(KoNLP)
library(wordcloud)
useSejongDic( )
library(stringr)
library(ggplot2)
library(dplyr)
library(plotrix)
txt <- readLines('D:/Workspace/R_Data_Analysis/Part2/Stage2_Graph/Ex01-1_hiphop/hiphop.txt')
setwd('D:/Workspace/R_Data_Analysis/Part2/Stage2_Graph/Ex01-1_hiphop')
library(KoNLP)
library(wordcloud)
useSejongDic( )
library(stringr)
library(ggplot2)
library(dplyr)
library(plotrix)
txt <- readLines('D:/Workspace/R_Data_Analysis/Part2/Stage2_Graph/Ex01-1_hiphop/hiphop.txt')
txt
setwd('D:/Workspace/R_Data_Analysis/Part2/Stage2_Graph/Ex01-1_hiphop')
library(KoNLP)
library(wordcloud)
useSejongDic( )
library(stringr)
library(ggplot2)
library(dplyr)
library(plotrix)
txt <- readLines('hiphop.txt')
place <- sapply(txt, extractNoun, USE.NAMES = F)
place
head(unlist(place), 30)
cdata <- unlist(place)
place <- str_replace_all(cdata, "[^[:alpha:]]","")
place <- gsub(" ","", place)
txt <- readLines("hiphopgsub.txt")
txt
cnt_txt <- length(txt)
cnt_txt
for(i in 1:cnt_txt) {
place <- gsub((txt[i]), "", place)
}
place
place <- Filter(function(x) {nchar(x) >= 2}, place)
write(unlist(place), "hiphop_2.txt")
rev <- read.table("hiphop_2.txt")
nrow(rev)
wordcount <- table(rev)
head(sort(wordcount, decreasing = T), 30)
rev
pie(top10, col = rainbow(10), radius = 1, main = "hiphop관련련 단어 TOP 10")
pct <- round(top10/sum(top10)*100, 1)
names(top10)
lab <- paste(names(top10), "\n", pct,"%")
pie(top10, main = "hiphop관련 단어 TOP 10", col = rainbow(10), cex = 0.8, labels = lab)
bchart <- head(sort(wordcount, decreasing = T), 10)
bchart
bp <- barplot(bchart, main = "hiphop관련 단어 TOP10")
bp <- barplot(bchart, main = "hiphop관련 단어 TOP10", col = rainbow(10),
cex.names = 0.7, las = 2, ylim = c(0, 25))
pct <- round(bchart/sum(bchart))*100, 1)
pct
text(x = bp, y = bchart*1.05, labels = paste("(",pct, "%",")"), col = "black", cex = 0.7)
text(x = bp, y = bchart*0.95, labels = paste(bchart,"건"), col = "black", cex = 0.7)
vec1 <- c(1:6)
vsc1
vec1
# 1번
vec1 <- c(1:6)
vec1
vec2 <- dec(c(5:10))
vec2 <- dec(c(5,10))
vec2 <- dec, c(5:10)
vec2 <- c(5:10)
vec2
vec2 <- c(10:5)
vec2
vec3 <- c(1,3)
vec3
vec3 <- c(1;3)
vec3
vec3 <- c(1:3)
vec3
vec3 <- c(1,1,2,2,3,3)
vec3
# 1번
vec1 <- c(1:6)
vec1
vec2 <- c(10:5)
vec2
vec5 <- c(+2)
vec5
vec5 <- c(1+2)
vec5
vec5 <- c(1:+2)
vec5
vec5 <- c(1:x+2)
vec5
vec5 <- c(1:x+8)
vec5
vec5 <- c(2:x+2)
vec5
vec5 <- c(11:x+2)
vec5
vec5 <- c(11:x-2)
vec5
vec5 <- c(x+2:8)
vec5
vec5 <- c(x2:8)
vec5 <- c(2x:8)
vec5 <- c(2:8-x)
vec5
# 6번
View(mpg)
Filter(toyota)
mpg
Filter(toyota)
Filter(manufacturer, toyota)
# 6번
View(mpg)
View(diamonds)
header(7)
# 1번
vec1 <- c(1:6)
vec1
vec2 <- c(10:5)
vec2
vec3 <- c(1,1), c(2,2), c(3,3)
vec3 <- c(1:3, 1:3)
vec4 <- c(1:3, 1:3)
vec4
vec3 <- c(1:1, 2:2, 3:3)
vec3
vec3 <- c(1:1:2:2:3:3)
vec3
#9번
setwd("D:/Workspace/R_Data_Analysis/Part2/data")
library(ggplot2)
data1 <- read.csv("야구성적.csv", header = T)
data1
ggplot(readLines("야구성적.csv"))
seq(-3, 3, length.out = 60)
seq(-3, 3, length.out = 61)
seq(-3, 3, 0.1)
?seq()
seq(1,5,2)
seq(from=1, to=5, by=2)
seq(by=2, to=5, from=1)
seq(2, 5, 1)
x <- seq(-3, 3, 0.1)
x[1]
x[1, 11, 31]
x[c(1, 11, 21, 31)]
x[x>2.45]
x <- 1:5
x
factor(x, levels = c(1:4))
factor(x, levels = c(1:4), labels = c('a', 'b', 'c', 'd'))
factor(x, levels = c(1:4), labels = c('a', 'b', 'c', 'd'), ordered = T)
week <- factor(c(1:7), levels = c(1:7), labels = c('일', '월', '화', '수', '목', '금', '토'), ordered=T)
week
name <- c("철수", "영희", "길동")
age <- ㅊ(21, 20, 31)
age <- c(21, 20, 31)
gender <- factor(c("M", "F", "M"))
character <- data.frame(name, age, gender)
str(character)
character
name <- c("철수", "영희", "길동")
age <- c(21, 20, 31)
gender <- factor(c("M", "F", "M"))
person <- data.frame(name, age, gender)
str(person)
person
person$name
person[1,]
person[1,]
person[, 2]
person[3, 1]
# 2장
setwd('D:/Workspace/R_Statistics/ch02')
data <- read.csv("2010년 인구사항.csv", header=F, na.strings=c("."))
# 2장
setwd('D:/Workspace/R_Statistics/ch02')
data <- read.csv("2010년 인구사항.csv", header=F, na.strings=c("."))
str(data)
data$V1 <- factor(data$V1, levels = c(1, 2), labels = c("남자", "여자"))
data$V3 <- factor(data$V3, levels = 1:14,
labels=c("가구주", "가구주의 배우자", "자녀",
"자녀의 배우자", "가구주의 부모", "배우자의 부모",
"손자녀, 그 배우자", "증손자녀, 그 배우자",
"조부모", "형제자매, 그 배우자",
"형제자매의 자녀, 그 배우자", "부모의 형제자매, 그 배우자",
"기타 친인척", "그외같이사는사람"))
data$V4 <- factor(data$V4, levels = 1:8,
labels=c("안 받았음", "초등학교", "중학교", "고등학교", "대학-4년제 미만",
"대학교-4년제 이상", "대학원 석사 과정", "대학원 박사 과정"))
str(data)
head(data)
# 2장
setwd('D:/Workspace/R_Statistics/ch02')
data <- read.csv("2010년 인구사항.csv", header=F, na.strings=c("."))
str(data)
data$V1 <- factor(data$V1, levels = c(1, 2), labels = c("남자", "여자"))
data$V3 <- factor(data$V3, levels = 1:14,
labels=c("가구주", "가구주의 배우자", "자녀",
"자녀의 배우자", "가구주의 부모", "배우자의 부모",
"손자녀, 그 배우자", "증손자녀, 그 배우자",
"조부모", "형제자매, 그 배우자",
"형제자매의 자녀, 그 배우자", "부모의 형제자매, 그 배우자",
"기타 친인척", "그외같이사는사람"))
data$V4 <- factor(data$V4, levels = 1:8,
labels=c("안 받았음", "초등학교", "중학교", "고등학교", "대학-4년제 미만",
"대학교-4년제 이상", "석사과정", "박사과정"))
str(data)
head(data)
